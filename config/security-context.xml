<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 定义不需要过滤的请求路径 -->
	<http pattern="/**/res/**" security="none" />
	<http pattern="/example/**" security="none" />

	<!-- 配置访问限制规则 -->
	<http auto-config="true" use-expressions="true">

		<!-- 登录页要求使用 https -->
		<intercept-url pattern="/login**" access="permitAll" />
	
		<!-- 定义需要授权访问的请求路径 -->
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/**" access="hasRole('ROLE_USER')" />

		<!-- 用户登录配置 -->
		<form-login login-processing-url="/userlogin" login-page="/login" 
			authentication-failure-url="/login?error=1" 
			password-parameter="p" username-parameter="u" />

		<!-- 自动登录配置 -->
		<remember-me key="${rememberme.key}" services-ref="rememberMeServices" />
		
		<!-- 用户登出配置 -->
		<logout logout-url="/logout" logout-success-url="/login?logout" invalidate-session="true" />

		<!-- 用户会话配置 -->
		<session-management session-fixation-protection="migrateSession" 
			invalid-session-url="/login?inavlid">
			<concurrency-control max-sessions="1" expired-url="/login?expired"/>
		</session-management>

		<!-- 自定义过滤器: 验证码安全过滤器. -->
		<custom-filter ref="captchaAuthenticationFilter" before="FORM_LOGIN_FILTER"/>
	</http>
	
	<!-- 使用数据库记录登录 Cookie 信息，随机产生密钥. -->
  	<beans:bean id="rememberMeServices" class="org.kayura.security.PersistentRememberMeServices">
 		<beans:constructor-arg name="key" value="${rememberme.key}" />
 		<beans:constructor-arg name="userDetailsService" ref="userDetailServiceImpl" />
 		<beans:constructor-arg name="tokenRepository" ref="tokenRepositoryImpl" />
 		<beans:property name="parameter" value="rme" />
		<beans:property name="cookieName" value="KYLALID" />
		<beans:property name="seriesLength" value="16" />
		<beans:property name="tokenLength" value="32" />		
	</beans:bean>
 	<beans:bean id="tokenRepositoryImpl" class="org.kayura.uasp.security.RememberMeTokenRepositoryImpl">
		<beans:property name="userService" ref="userServiceImpl" />
	</beans:bean>
	
	<!-- 使用浏览器 Cookie 记录登录用户信息（用户名，时间戳，密码，密钥）MD5 加密. -->
<!--   	<beans:bean id="rememberMeServices" 
 		class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">
 		<beans:constructor-arg name="key" value="${rememberme.key}" />
 		<beans:constructor-arg name="userDetailsService" ref="userDetailServiceImpl" />
 		<beans:property name="parameter" value="rme" />
		<beans:property name="cookieName" value="KAYURAID" />
	</beans:bean> -->
	
	<!-- 注册验证码过滤器 -->
 	<beans:bean id="captchaAuthenticationFilter" class="org.kayura.security.CaptchaAuthenticationFilter">
		<beans:property name="captchaFieldName" value="vcode"/>
		<beans:property name="authenticationFailureHandler">
			<beans:bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
				<beans:property name="defaultFailureUrl" value="/login?error=2"/>
			</beans:bean>
		</beans:property>
	</beans:bean>
	
	<!-- 注册认证管理器实例 -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userDetailServiceImpl">
			<password-encoder hash="sha-256">
				<salt-source user-property="salt" />
			</password-encoder>
		</authentication-provider>
	</authentication-manager>
	<beans:bean id="userDetailServiceImpl" class="org.kayura.uasp.security.UserDetailServiceImpl">
		<beans:property name="userService" ref="userServiceImpl" />
	</beans:bean>
<!-- 	<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<beans:constructor-arg name="strength" value="256"/>
	</beans:bean>
	<beans:bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
		<beans:property name="userPropertyToUse" value="salt" />
	</beans:bean> -->
	
</beans:beans>
