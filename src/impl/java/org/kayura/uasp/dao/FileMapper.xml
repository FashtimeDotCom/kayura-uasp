<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.3//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.kayura.uasp.dao.FileMapper">

	<!-- 文件存储关系持久化 -->

	<resultMap id="fileInfoMap" type="org.kayura.uasp.po.FileInfo">
		<id property="fileId" column="File_Id" />
		<result property="fileSize" column="FileSize" />
		<result property="contentType" column="ContentType" />
		<result property="logicPath" column="LogicPath" />
		<result property="md5" column="MD5" />
		<result property="allowChange" column="AllowChange" />
		<result property="isEncrypted" column="IsEncrypted" />
		<result property="salt" column="Salt" />
	</resultMap>

	<resultMap id="fileRelationMap" type="org.kayura.uasp.po.FileRelation">
		<id property="frId" column="Fr_Id" />
		<result property="fileId" column="File_Id" />
		<result property="tenantId" column="Tenant_Id" />
		<result property="bizId" column="BizId" />
		<result property="category" column="Category" />
		<result property="fileName" column="FileName" />
		<result property="postfix" column="Postfix" />
		<result property="uploaderId" column="UploaderId" />
		<result property="uploaderName" column="UploaderName" />
		<result property="uploadTime" column="UploadTime" />
		<result property="serial" column="Serial" />
		<result property="tags" column="Tags" />
	</resultMap>
	
	<!-- FileInfo -->

	<insert id="insertFileInfo" parameterType="org.kayura.uasp.po.FileInfo">
		INSERT UASP_FileInfos (
			File_Id,
			FileSize,
			ContentType,
			LogicPath,
			MD5,
			AllowChange,
			IsEncrypted,
			Salt
		) VALUES(
			#{fileId},
			#{fileSize},
			#{contentType},
			#{logicPath},
			#{md5},
			#{allowChange},
			#{isEncrypted},
			#{salt}
		)		
	</insert>
	
	<update id="updateFileInfo" parameterType="map">
		UPDATE UASP_FileInfos 
		<set>
			<if test="fileSize != null">
				FileSize = #{fileSize},
			</if>
			<if test="contentType != null">
				ContentType = #{contentType},
			</if>
			<if test="md5 != null">
				MD5 = #{md5},
			</if>
			<if test="allowChange != null">
				AllowChange = #{allowChange},
			</if>
		</set>
		WHERE ( File_Id = #{fileId} )
	</update>

	<select id="getFileInfoById" parameterType="string" resultMap="fileInfoMap">
		SELECT
			t.File_Id,
			t.FileSize,
			t.ContentType,
			t.LogicPath,
			t.MD5,
			t.AllowChange,
			t.IsEncrypted,
			t.Salt
		FROM UASP_FileInfos t
		WHERE ( t.File_Id = #{value} )
	</select>
	
	<select id="getFileInfoKeyByMd5" parameterType="string" resultType="string">
		SELECT t.File_Id FROM UASP_FileInfos t
		WHERE ( t.Status = 0 ) AND ( t.MD5 = #{value} ) 
	</select>

	<select id="fileInfoExistsByMap" parameterType="map" resultType="boolean">
		SELECT COUNT(1) > 0 FROM UASP_FileInfos t
		<where>
			<if test="fileId != null">
				AND ( t.File_Id = #{fileId} )
			</if>
			<if test="md5 != null">
				AND ( t.MD5 = #{md5} )
			</if>
		</where>
	</select>
	
	<!-- FileRelation -->

	<insert id="insertFileRelation" parameterType="org.kayura.uasp.po.FileRelation">
		INSERT UASP_FileRelations (
			Fr_Id,
			File_Id,
			Tenant_Id,
			BizId,
			Category,
			FileName,
			Postfix,
			UploaderId,
			UploaderName,
			UploadTime,
			Serial,
			Tags
		) VALUES (
			#{frId},
			#{fileId},
			#{tenantId},
			#{bizId},
			#{category},
			#{fileName},
			#{postfix},
			#{uploaderId},
			#{uploaderName},
			#{uploadTime},
			#{serial},
			#{tags}
		)			
	</insert>
	
	<update id="updateFileRelation" parameterType="map">
		UPDATE UASP_FileRelations 
		<set>
			<if test="category != null">
				Category = #{category},
			</if>
			<if test="fileName != null">
				FileName = #{fileName},
			</if>
			<if test="postfix != null">
				Postfix = #{postfix},
			</if>
			<if test="uploadTime != null">
				UploadTime = #{uploadTime},
			</if>
			<if test="serial != null">
				Serial = #{serial},
			</if>
			<if test="tags != null">
				Tags = #{tags},
			</if>
		</set>
		WHERE ( Fr_Id = #{frId} )
	</update>
	
	<sql id="fileRelationColumns">
		t.Fr_Id,
		t.File_Id,
		t.Tenant_Id,
		t.BizId,
		t.Category,
		t.FileName,
		t.Postfix,
		t.UploaderId,
		t.UploaderName,
		t.UploadTime,
		t.Serial,
		t.Tags
	</sql>
	
	<select id="getFileRelationById" parameterType="string" resultMap="fileRelationMap">
		SELECT 
			<include refid="fileRelationColumns" />
		FROM UASP_FileRelations t
		WHERE ( t.Fr_Id = #{value} )
	</select>
		
	<select id="getFileRelationTagsById" parameterType="string" resultType="string">
		SELECT t.Tags FROM UASP_FileRelations t
		WHERE ( t.Fr_Id = #{value} )
	</select>
	
	<select id="findFileRelationsByMap" parameterType="map" resultMap="fileRelationMap">
		SELECT 
			<include refid="fileRelationColumns" />
		FROM UASP_FileRelations t
		<where>
			<if test="fileId != null">
				AND ( t.File_Id = #{fileId} )
			</if>
			<if test="bizId != null">
				AND ( t.BizId = #{bizId} )
			</if>
			<if test="category != null">
				AND ( t.Category = #{category} )
			</if>
			<if test="uploader != null">
				AND ( t.UploaderId = #{uploader} OR t.UploaderName = #{uploader} )
			</if>
			<if test="tags != null">
				AND ( t.Tags LIKE #{tags} )
			</if>
		</where>
	</select>
	

</mapper>